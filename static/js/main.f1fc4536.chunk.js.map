{"version":3,"sources":["components/FileContext.js","components/DropZoneFile.js","components/NavigationBar.js","Help.js","components/Cesar.js","components/Bruteforce.js","components/Author.js","components/CreateFile.js","App.js","index.js"],"names":["FileContext","createContext","DropZoneFile","close","useContext","setFile","onDrop","useCallback","acceptedFiles","forEach","file","reader","FileReader","onabort","console","log","onerror","onload","str","result","title","name","value","readAsText","useDropzone","getRootProps","getInputProps","isDragActive","rootRef","useEffect","current","classList","add","remove","className","NavigationBar","useState","show","setShow","handleClose","history","useHistory","Navbar","bg","Brand","Toggle","aria-controls","Collapse","id","Nav","to","NavDropdown","Item","onSelect","push","location","pathname","blob","Blob","crypted","type","saveAs","Divider","dataUrl","window","URL","createObjectURL","open","print","inline","Modal","animation","onHide","Header","closeButton","Title","Body","Footer","Button","variant","onClick","cryptCesar","x","k","n","decryptCesar","y","cesarMethod","language","alphabet","alphabetFull","isCrypt","uppers","res","upperAlphabet","toUpperCase","i","length","includes","indexOf","toLowerCase","e","replaceAt","String","prototype","index","replacement","this","substr","Cesar","languageList","names","values","alphabets","swap","useRef","setAlphabetFull","setLanguage","shift","setShift","languagePower","setLanguagePower","Array","from","_","shiftList","setShiftList","cryptMode","setCryptMode","setOutputText","text","t","setText","outputText","Form","Group","controlId","Label","Control","as","onChange","target","cols","rows","ref","size","Dropdown","Menu","map","key","onClickChangeLanguage","onClickChangeShift","Bruteforce","bruteforceList","setBruteforceList","cryptBruteforce","Table","striped","bordered","hover","Author","CreateFile","cryptButton","prev","App","Provider","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f1fc4536.chunk.js","sourcesContent":["import {createContext} from 'react';\r\n\r\nconst FileContext = createContext(null);\r\nexport {FileContext}\r\n","import React, {useCallback, useContext, useEffect} from 'react';\r\nimport {useDropzone} from \"react-dropzone\";\r\nimport {FileContext} from \"./FileContext\";\r\n\r\nconst DropZoneFile = ({close})=>{\r\n    const [_,setFile] = useContext(FileContext);\r\n\r\n    const onDrop = useCallback(acceptedFiles => {\r\n        acceptedFiles.forEach((file) => {\r\n            const reader = new FileReader()\r\n\r\n            reader.onabort = () => console.log('file reading was aborted')\r\n            reader.onerror = () => console.log('file reading has failed')\r\n            reader.onload = () => {\r\n                const str = reader.result;\r\n                setFile({\r\n                    title: file.name,\r\n                    value: str\r\n                })\r\n                close();\r\n            }\r\n            reader.readAsText(file,'utf-8')\r\n        })\r\n    }, [])\r\n    const {getRootProps, getInputProps, isDragActive, rootRef} = useDropzone({onDrop})\r\n\r\n\r\n\r\n    useEffect(()=>{\r\n        isDragActive?\r\n            rootRef.current.classList.add('dropZone-active')\r\n            :\r\n            rootRef.current.classList.remove('dropZone-active');\r\n    },[rootRef,isDragActive]);\r\n\r\n    return (\r\n        <div className=\"dropZone\"  {...getRootProps()}>\r\n            <input className=\"inputFile\" {...getInputProps()} />\r\n            {\r\n                isDragActive ?\r\n                    <p>Відпустіть файл тут...</p> :\r\n                    <p>Перетяніть файл або натисніть тут щоб вибрати файл</p>\r\n            }\r\n        </div>\r\n    )\r\n};\r\n\r\nexport {DropZoneFile}\r\n","import React, {useContext, useState} from 'react';\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport NavDropdown from \"react-bootstrap/NavDropdown\";\r\nimport Button from 'react-bootstrap/Button';\r\nimport {Link, useHistory} from \"react-router-dom\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport {DropZoneFile} from \"./DropZoneFile\";\r\nimport {FileContext} from \"./FileContext\";\r\nimport { saveAs } from 'file-saver';\r\n\r\nconst NavigationBar = ()=>{\r\n\r\n    const [show, setShow] = useState(false);\r\n    const [file,setFile] = useContext(FileContext);\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n    const history = useHistory();\r\n\r\n    return (\r\n        <Navbar bg=\"primary\" bg=\"dark\" variant=\"dark\">\r\n            <Navbar.Brand >Лабораторна робота 1</Navbar.Brand>\r\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n            <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                <Nav className=\"mr-auto\">\r\n                    <Link to=\"/\" className=\"nav-link\">Шифр Цезаря</Link>\r\n                    <Link to=\"/bruteforce\" className=\"nav-link\">Метод \"Грубої сили\"</Link>\r\n                    <NavDropdown title=\"Файл\" id=\"basic-nav-dropdown\">\r\n                        <NavDropdown.Item onSelect={()=>{history.push(\"/createFile\"); setFile({title: '',value: ''})}}>Створити</NavDropdown.Item>\r\n                        <NavDropdown.Item onSelect={()=>{history.push(\"/createFile\"); handleShow()}}>Відкрити</NavDropdown.Item>\r\n                        <NavDropdown.Item onSelect={()=>{\r\n                            if (history.location.pathname === '/createFile'){\r\n                                const blob = new Blob([file.crypted], {type: \"text/plain;charset=utf-8\"});\r\n                                saveAs(blob, file.title);\r\n                            }\r\n                        }\r\n                        }>Зберегти</NavDropdown.Item>\r\n                        <NavDropdown.Divider/>\r\n                        <NavDropdown.Item onSelect={()=>{\r\n                            const blob = new Blob([file.crypted], {type: \"text/plain;charset=utf-8\"});\r\n                            const dataUrl = window.URL.createObjectURL(blob);\r\n                            const pdfWindow = window.open(dataUrl);\r\n                            pdfWindow.print();\r\n                        }}>Друк</NavDropdown.Item>\r\n                    </NavDropdown>\r\n                </Nav>\r\n                <Nav inline=\"true\">\r\n                    <Link to=\"/author\" className=\"nav-link\">Про автора</Link>\r\n                </Nav>\r\n            </Navbar.Collapse>\r\n            <Modal animation={false} show={show} onHide={handleClose}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Файл</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <DropZoneFile close={handleClose}/>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"primary\" onClick={handleClose}>\r\n                        Завантажити файл\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </Navbar>\r\n\r\n    )\r\n}\r\n\r\n\r\nexport {NavigationBar};\r\n","const cryptCesar = (x,k,n)=>{\r\n    // x - символ відкритого тексту\r\n    // n - потужність алфавіту\r\n    // k - ключ\r\n    return (x+k)%n;\r\n}\r\n\r\nconst decryptCesar = (y,k,n)=>{\r\n    return (y+n-(k % n)) % n\r\n}\r\n\r\nexport const cesarMethod = (str,n,k,language,alphabet,alphabetFull,isCrypt)=>{\r\n    let uppers = [];\r\n\r\n    let res = '';\r\n    const upperAlphabet = alphabet.toUpperCase();\r\n    for (let i = 0; i < str.length; i++){\r\n        if (!alphabetFull.includes(str[i])){\r\n            res+=str[i];\r\n            continue;\r\n        }\r\n        if (upperAlphabet.includes(str[i])){\r\n            uppers.push(i);\r\n        }\r\n        const x = alphabet.indexOf(str[i].toLowerCase());\r\n        if (isCrypt) {\r\n            res += alphabet[cryptCesar(x, k, n)];\r\n        }else{\r\n            res += alphabet[decryptCesar(x,k,n)];\r\n        }\r\n    }\r\n    uppers.forEach(e=>{res = res.replaceAt(e,res[e].toUpperCase())});\r\n    return res;\r\n}\r\n\r\n","import React, {useEffect, useRef, useState} from 'react';\r\n\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Dropdown from \"react-bootstrap/Dropdown\";\r\nimport {cesarMethod} from \"../Help\";\r\n\r\nString.prototype.replaceAt = function(index, replacement) {\r\n    return this.substr(0, index) + replacement + this.substr(index + replacement.length);\r\n}\r\n\r\nconst Cesar = ()=>{\r\n\r\n    const languageList = {\r\n        names: ['Англійський','Український','Російський'],\r\n        values: [26,33,33],\r\n        alphabets: ['abcdefghijklmnopqrstuvwxyz','абвгґдеєжзиіїйклмнопрстуфхцчшщьюя','абвгдеёжзийклмнопрстуфхцчшщъыьэюя']};\r\n\r\n    const swap = useRef(null);\r\n    const [alphabetFull,setAlphabetFull] = useState('abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ');\r\n    const [language, setLanguage] = useState('Англійський');\r\n    const [shift, setShift] = useState(1);\r\n    const [languagePower, setLanguagePower] = useState(26);\r\n    const [shiftList, setShiftList] = useState(Array.from({length: 34}, (_, i) => i + 1));\r\n    const [cryptMode,setCryptMode] = useState(true);\r\n\r\n    useEffect(()=>{\r\n        setShiftList(Array.from({length: languagePower+1}, (_, i) => i + 1))\r\n    },[languagePower]);\r\n\r\n    useEffect(()=>{\r\n        const alphabet = languageList.alphabets[languageList.names.indexOf(language)];\r\n        cryptMode === true ?\r\n            setOutputText(cesarMethod(text, languagePower, shift, language,alphabet,alphabetFull,true))\r\n            :\r\n            setOutputText(cesarMethod(text, languagePower, shift, language,alphabet,alphabetFull,false))\r\n    },[shift,language,languagePower,alphabetFull]);\r\n\r\n    useEffect(()=>{\r\n        let t = languageList.alphabets[languageList.names.indexOf(language)];\r\n        t+=t.toUpperCase();\r\n        setAlphabetFull(t);\r\n    },[language])\r\n\r\n    const [text, setText] = useState('');\r\n    const [outputText, setOutputText] = useState('');\r\n\r\n\r\n    const onClickChangeLanguage = (language)=>{\r\n        setLanguage(language);\r\n        const index = languageList.names.indexOf(language);\r\n        setLanguagePower(languageList.values[index]);\r\n    }\r\n\r\n    const onClickChangeShift = (shift)=>{\r\n        setShift(shift);\r\n    }\r\n\r\n    const onClickChangeCryptMode = ()=>{\r\n        let x = text;\r\n        let y = outputText;\r\n        setText(y);\r\n        setOutputText(x);\r\n        setCryptMode(!cryptMode);\r\n    }\r\n\r\n    const onTypeText = (e)=>{\r\n        let value = e.target.value;\r\n        setText(value);\r\n        const alphabet = languageList.alphabets[languageList.names.indexOf(language)];\r\n        if (cryptMode) {\r\n            let res = cesarMethod(value, languagePower, shift, language,alphabet,alphabetFull,true)\r\n            setOutputText(res);\r\n        }else{\r\n            let res = cesarMethod(value, languagePower, shift, language,alphabet,alphabetFull,false)\r\n            setOutputText(res);\r\n        }\r\n\r\n    }\r\n\r\n    const onTypeOutputText = (e)=>{\r\n        //const value = e.target.value;\r\n        //setOutputText(value);\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"d-flex justify-content-center p-5\">\r\n                <Form.Group className=\"mr-5\"  controlId=\"inputCesar\">\r\n                    <Form.Label>{cryptMode === true ? 'Текст' : 'Зашифрований текст'}</Form.Label>\r\n                    <Form.Control as=\"textarea\" value={text}  onChange={onTypeText} cols=\"50\" rows=\"5\" />\r\n                </Form.Group>\r\n                <Button\r\n                    ref={swap}\r\n                    size=\"lg\"\r\n                    type=\"button\"\r\n                    className=\"align-self-center\"\r\n                    onClick={onClickChangeCryptMode}\r\n                >{'<>'}</Button>\r\n                <Form.Group className=\"ml-5\" controlId=\"outputCesar\">\r\n                    <Form.Label>{cryptMode === true ? 'Результат шифрування' : 'Дешифрований текст'}</Form.Label>\r\n                    <Form.Control as=\"textarea\" value={outputText}  onChange={onTypeOutputText} cols=\"50\" rows=\"5\" />\r\n                </Form.Group>\r\n            </div>\r\n            <div >\r\n                <div className=\"d-flex justify-content-center align-items-center\">\r\n                    <h2 className=\"pr-2\">Алфавіт:</h2>\r\n                    <Dropdown>\r\n                        <Dropdown.Toggle variant=\"success\" id=\"choose-language\">\r\n                            {language}\r\n                        </Dropdown.Toggle>\r\n                        <Dropdown.Menu>\r\n                            {languageList.names.map(language=>{\r\n                                return <Dropdown.Item key={language} onClick={()=>{onClickChangeLanguage(language)}}>{language}</Dropdown.Item>\r\n                            })}\r\n                        </Dropdown.Menu>\r\n                    </Dropdown>\r\n                </div>\r\n                <div className=\"d-flex justify-content-center align-items-center\">\r\n                    <h2 className=\"pr-2\">Зсув:</h2>\r\n                    <Dropdown>\r\n                        <Dropdown.Toggle variant=\"success\" id=\"choose-shift\">\r\n                            {shift}\r\n                        </Dropdown.Toggle>\r\n                        <Dropdown.Menu id=\"dropdown-shift\">\r\n\r\n                            {shiftList.map(shift=>{\r\n                                return <Dropdown.Item key={shift} onClick={()=>{onClickChangeShift(shift)}}>{shift}</Dropdown.Item>\r\n                            })}\r\n                        </Dropdown.Menu>\r\n                    </Dropdown>\r\n                </div>\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport {Cesar}\r\n","import React, {useEffect, useState} from 'react';\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Dropdown from \"react-bootstrap/Dropdown\";\r\nimport Table from \"react-bootstrap/Table\";\r\nimport {cesarMethod} from \"../Help\";\r\n\r\nconst Bruteforce = ()=>{\r\n    const languageList = {\r\n        names: ['Англійський','Український','Російський'],\r\n        values: [26,33,33],\r\n        alphabets: ['abcdefghijklmnopqrstuvwxyz','абвгґдеєжзиіїйклмнопрстуфхцчшщьюя','абвгдеёжзийклмнопрстуфхцчшщъыьэюя']};\r\n\r\n    const [text, setText] = useState('');\r\n    const [alphabetFull,setAlphabetFull] = useState('abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ');\r\n    const [language, setLanguage] = useState('Англійський');\r\n    const [languagePower, setLanguagePower] = useState(26);\r\n    const [bruteforceList, setBruteforceList] = useState([]);\r\n\r\n    useEffect(()=>{\r\n        setBruteforceList(cryptBruteforce(text));\r\n    },[alphabetFull]);\r\n\r\n    useEffect(()=>{\r\n        let t = languageList.alphabets[languageList.names.indexOf(language)];\r\n        t+=t.toUpperCase();\r\n        setAlphabetFull(t);\r\n\r\n    },[language])\r\n\r\n    const onClickChangeLanguage = (language)=>{\r\n        setLanguage(language);\r\n        const index = languageList.names.indexOf(language);\r\n        setLanguagePower(languageList.values[index]);\r\n    }\r\n\r\n    const onTypeText = (e)=>{\r\n        let value = e.target.value;\r\n        setText(value);\r\n\r\n        setBruteforceList(cryptBruteforce(value));\r\n    }\r\n\r\n    const cryptBruteforce = (value)=>{\r\n        const alphabet = languageList.alphabets[languageList.names.indexOf(language)];\r\n        const result = [];\r\n        for (let i = 0; i <= languagePower; i++){\r\n            result.push(\r\n                {\r\n                    text: cesarMethod(value, languagePower, i, language,alphabet,alphabetFull,true),\r\n                    shift: i\r\n                })\r\n        }\r\n        return result;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"d-flex justify-content-center p-5\">\r\n                <Form.Group className=\"mr-5\"  controlId=\"inputCesar\">\r\n                    <Form.Label>Текст</Form.Label>\r\n                    <Form.Control as=\"textarea\" value={text}  onChange={onTypeText} cols=\"50\" rows=\"5\" />\r\n                </Form.Group>\r\n            </div>\r\n            <div >\r\n                <div className=\"d-flex justify-content-center align-items-center\">\r\n                    <h2 className=\"pr-2\">Алфавіт:</h2>\r\n                    <Dropdown>\r\n                        <Dropdown.Toggle variant=\"success\" id=\"choose-language\">\r\n                            {language}\r\n                        </Dropdown.Toggle>\r\n                        <Dropdown.Menu>\r\n                            {languageList.names.map(language=>{\r\n                                return <Dropdown.Item key={language} onClick={()=>{onClickChangeLanguage(language)}}>{language}</Dropdown.Item>\r\n                            })}\r\n                        </Dropdown.Menu>\r\n\r\n                    </Dropdown>\r\n                </div>\r\n            </div>\r\n            <Table striped bordered hover>\r\n                <thead>\r\n                <tr>\r\n                    <th>Зсув</th>\r\n                    <th>Зашифрований текст</th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                {bruteforceList.map(({text,shift})=>{\r\n                    return (\r\n                        <tr>\r\n                            <td>{shift}</td>\r\n                            <td>{text}</td>\r\n                        </tr>\r\n                    )\r\n                })}\r\n\r\n                </tbody>\r\n            </Table>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport {Bruteforce}\r\n","import React from 'react';\r\n\r\nconst Author = ()=>{\r\n    return (\r\n        <div className=\"flex-row justify-content-center align-items-center mt-5\">\r\n            <h1>Прачов Віталій ТМ-82</h1>\r\n            <h5>Шифр Цезаря - один з найдавніших шифрів, названий на честь римського імператора Гая Юлія Цезаря, який використовував його для секретного листування. При шифруванні кожен символ замінюється іншим, віддаленим від нього в алфавіті на фіксоване число позицій. </h5>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport {Author}\r\n","import React, {useContext, useEffect, useRef, useState} from 'react';\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Dropdown from \"react-bootstrap/Dropdown\";\r\nimport {cesarMethod} from \"../Help\";\r\nimport {FileContext} from \"./FileContext\";\r\n\r\nString.prototype.replaceAt = function(index, replacement) {\r\n    return this.substr(0, index) + replacement + this.substr(index + replacement.length);\r\n}\r\n\r\nconst CreateFile = ()=>{\r\n    const languageList = {\r\n        names: ['Англійський','Український','Російський'],\r\n        values: [26,33,33],\r\n        alphabets: ['abcdefghijklmnopqrstuvwxyz','абвгґдеєжзиіїйклмнопрстуфхцчшщьюя','абвгдеёжзийклмнопрстуфхцчшщъыьэюя']};\r\n\r\n    const swap = useRef(null);\r\n    const cryptButton = useRef(null);\r\n    const [alphabetFull,setAlphabetFull] = useState('abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ');\r\n    const [language, setLanguage] = useState('Англійський');\r\n    const [shift, setShift] = useState(1);\r\n    const [languagePower, setLanguagePower] = useState(26);\r\n    const [shiftList, setShiftList] = useState(Array.from({length: 34}, (_, i) => i + 1));\r\n    const [cryptMode,setCryptMode] = useState(true);\r\n    const [file,setFile] = useContext(FileContext);\r\n\r\n\r\n    useEffect(()=>{\r\n        setShiftList(Array.from({length: languagePower+1}, (_, i) => i + 1))\r\n    },[languagePower]);\r\n\r\n    useEffect(()=>{\r\n        const alphabet = languageList.alphabets[languageList.names.indexOf(language)];\r\n        cryptMode === true ?\r\n            setOutputText(cesarMethod(text, languagePower, shift, language,alphabet,alphabetFull,true))\r\n            :\r\n            setOutputText(cesarMethod(text, languagePower, shift, language,alphabet,alphabetFull,false))\r\n    },[shift,language,languagePower,alphabetFull]);\r\n\r\n    useEffect(()=>{\r\n        let t = languageList.alphabets[languageList.names.indexOf(language)];\r\n        t+=t.toUpperCase();\r\n        setAlphabetFull(t);\r\n    },[language])\r\n\r\n    useEffect(()=>{\r\n        setText(file.value);\r\n    },[file.value])\r\n\r\n    const [text, setText] = useState('');\r\n    const [outputText, setOutputText] = useState('');\r\n\r\n    useEffect(()=>{\r\n        setFile((prev)=>{\r\n            return {\r\n                title: prev.title,\r\n                value: prev.value,\r\n                crypted: outputText\r\n            }\r\n        })\r\n    },[outputText])\r\n\r\n\r\n    const onClickChangeLanguage = (language)=>{\r\n        setLanguage(language);\r\n        const index = languageList.names.indexOf(language);\r\n        setLanguagePower(languageList.values[index]);\r\n    }\r\n\r\n    const onClickChangeShift = (shift)=>{\r\n        setShift(shift);\r\n    }\r\n\r\n    const onClickChangeCryptMode = ()=>{\r\n        let x = text;\r\n        let y = outputText;\r\n        setText(y);\r\n        setOutputText(x);\r\n        setCryptMode(!cryptMode);\r\n    }\r\n\r\n    const onClickCrypt = ()=>{\r\n        const alphabet = languageList.alphabets[languageList.names.indexOf(language)];\r\n        if (cryptMode) {\r\n            let res = cesarMethod(text, languagePower, shift, language,alphabet,alphabetFull,true)\r\n            setOutputText(res);\r\n        }else{\r\n            let res = cesarMethod(text, languagePower, shift, language,alphabet,alphabetFull,false)\r\n            setOutputText(res);\r\n        }\r\n    }\r\n\r\n    const onTypeText = (e)=>{\r\n        let value = e.target.value;\r\n        setText(value);\r\n    }\r\n\r\n    const onTypeOutputText = (e)=>{\r\n        const value = e.target.value;\r\n        //setOutputText(value);\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"flex-row align-items-center p-5\">\r\n                <Form.Group controlId=\"inputCesar\">\r\n                    <Form.Label>{cryptMode === true ? 'Текст файлу ' : 'Зашифрований текст файлу '}<b>{file.title}</b></Form.Label>\r\n                    <Form.Control as=\"textarea\" value={text}  onChange={onTypeText} cols=\"50\" rows=\"9\" />\r\n                </Form.Group>\r\n                <Button\r\n                    ref={swap}\r\n                    size=\"lg\"\r\n                    type=\"button\"\r\n                    className=\"align-self-center m-3\"\r\n                    onClick={onClickChangeCryptMode}\r\n                >{'<>'}</Button>\r\n                <br/>\r\n                <Button\r\n                    ref={cryptButton}\r\n                    size=\"lg\"\r\n                    type=\"button\"\r\n                    variant=\"success\"\r\n                    className=\"align-self-center m-3\"\r\n                    onClick={onClickCrypt}\r\n                >{cryptMode === true ? 'Зашифрувати': 'Розшифрувати'}</Button>\r\n                <Form.Group controlId=\"outputCesar\">\r\n                    <Form.Label>{cryptMode === true ? 'Зашифрований текст файлу ' : 'Дешифрований текст файлу '}<b>{file.title}</b></Form.Label>\r\n                    <Form.Control as=\"textarea\" value={outputText}  onChange={onTypeOutputText} cols=\"50\" rows=\"9\" />\r\n                </Form.Group>\r\n            </div>\r\n            <div >\r\n                <div className=\"d-flex justify-content-center align-items-center\">\r\n                    <h2 className=\"pr-2\">Алфавіт:</h2>\r\n                    <Dropdown>\r\n                        <Dropdown.Toggle variant=\"success\" id=\"choose-language\">\r\n                            {language}\r\n                        </Dropdown.Toggle>\r\n                        <Dropdown.Menu>\r\n                            {languageList.names.map(language=>{\r\n                                return <Dropdown.Item key={language} onClick={()=>{onClickChangeLanguage(language)}}>{language}</Dropdown.Item>\r\n                            })}\r\n                        </Dropdown.Menu>\r\n                    </Dropdown>\r\n                </div>\r\n                <div className=\"d-flex justify-content-center align-items-center\">\r\n                    <h2 className=\"pr-2\">Зсув:</h2>\r\n                    <Dropdown>\r\n                        <Dropdown.Toggle variant=\"success\" id=\"choose-shift\">\r\n                            {shift}\r\n                        </Dropdown.Toggle>\r\n                        <Dropdown.Menu id=\"dropdown-shift\">\r\n\r\n                            {shiftList.map(shift=>{\r\n                                return <Dropdown.Item key={shift} onClick={()=>{onClickChangeShift(shift)}}>{shift}</Dropdown.Item>\r\n                            })}\r\n                        </Dropdown.Menu>\r\n                    </Dropdown>\r\n                </div>\r\n\r\n            </div>\r\n        </>\r\n    )\r\n};\r\n\r\nexport {CreateFile}\r\n","import React, {useState} from 'react';\nimport './App.css';\nimport {NavigationBar} from \"./components/NavigationBar\";\n\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n} from \"react-router-dom\";\nimport {Cesar} from \"./components/Cesar\";\nimport {Bruteforce} from \"./components/Bruteforce\";\nimport {Author} from \"./components/Author\";\nimport {CreateFile} from \"./components/CreateFile\";\nimport {FileContext} from \"./components/FileContext\";\n\nfunction App() {\n    const [file,setFile] = useState({\n        title: '',\n        value: '',\n        crypted: ''\n    });\n  return (\n      <Router>\n        <div className=\"App\">\n            <FileContext.Provider value={[file,setFile]}>\n            <NavigationBar/>\n                <div>\n                    <Switch>\n                        <Route path=\"/bruteforce\">\n                            <Bruteforce/>\n                        </Route>\n                        <Route path=\"/author\">\n                            <Author/>\n                        </Route>\n                        <Route path=\"/createFile\">\n                            <CreateFile/>\n                        </Route>\n                        <Route path=\"/\">\n                            <Cesar/>\n                        </Route>\n                    </Switch>\n                </div>\n            </FileContext.Provider>\n        </div>\n      </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './style.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}